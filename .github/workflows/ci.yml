name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build & Test (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'src/Spamma.App/Spamma.App/package-lock.json'

      - name: Install frontend dependencies
        working-directory: src/Spamma.App/Spamma.App
        run: npm ci

      - name: Build frontend
        working-directory: src/Spamma.App/Spamma.App
        run: npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: matrix.arch == 'arm64'

      - name: Build & Test inside ARM64 container
        if: matrix.arch == 'arm64'
        run: |
          docker run --rm --platform linux/arm64 \
            -v "${{ github.workspace }}":/workspace \
            -w /workspace \
            mcr.microsoft.com/dotnet/sdk:9.0 \
            bash -lc "dotnet restore && dotnet build --configuration Release && dotnet test --logger:\"trx;LogFileName=test-results-${{ matrix.arch }}.trx\" --verbosity minimal"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        if: matrix.arch == 'amd64'
        with:
          dotnet-version: '9.x'

      - name: Clear NuGet cache
        run: dotnet nuget locals all --clear
        if: matrix.arch == 'amd64'
        
      - name: Restore NuGet packages
        run: dotnet restore
        if: matrix.arch == 'amd64'

      - name: Run tests (${{ matrix.arch }})
        run: |
          dotnet test Spamma.sln \
            -r linux-x64 \
            --configuration Release \
            --logger "trx;LogFileName=test-results-${{ matrix.arch }}.trx" \
            --collect:"XPlat Code Coverage" \
            --results-directory test-results
        if: matrix.arch == 'amd64'

      - name: Publish test results (${{ matrix.arch }})
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results/**/*.trx
          check_name: Test Results (${{ matrix.arch }})
