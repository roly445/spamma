name: Build & Push Docker (Manual)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate timestamp
        id: timestamp
        run: echo "ts=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and test (AMD64)
        run: |
          docker build \
            -f src/Spamma.App/Spamma.App/Dockerfile.amd64 \
            --target test \
            --build-arg BUILD_VERSION="${{ github.event.inputs.tag }}" \
            --build-arg BUILD_DATE="${{ steps.timestamp.outputs.ts }}" \
            --build-arg VCS_REF="${{ github.sha }}" \
            .

      - name: Build and push (AMD64)
        run: |
          docker build \
            -f src/Spamma.App/Spamma.App/Dockerfile.amd64 \
            --build-arg BUILD_VERSION="${{ github.event.inputs.tag }}" \
            --build-arg BUILD_DATE="${{ steps.timestamp.outputs.ts }}" \
            --build-arg VCS_REF="${{ github.sha }}" \
            -t ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }} \
            -t ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-amd64-${{ steps.timestamp.outputs.ts }} \
            -t ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64 \
            .
          
          docker push ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}
          docker push ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-amd64-${{ steps.timestamp.outputs.ts }}
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64

      - name: Build and push (ARM)
        run: |
          docker build \
            -f src/Spamma.App/Spamma.App/Dockerfile.arm \
            --build-arg BUILD_VERSION="${{ github.event.inputs.tag }}" \
            --build-arg BUILD_DATE="${{ steps.timestamp.outputs.ts }}" \
            --build-arg VCS_REF="${{ github.sha }}" \
            -t ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-arm \
            -t ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-arm-${{ steps.timestamp.outputs.ts }} \
            -t ghcr.io/${{ github.repository }}:${{ github.sha }}-arm \
            .
          
          docker push ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-arm
          docker push ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-arm-${{ steps.timestamp.outputs.ts }}
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}-arm
          cache-from: type=gha
          cache-to: type=gha,mode=max
