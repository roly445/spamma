name: Build & Push Docker

on:
  schedule:
    - cron: '2 0 * * *'  # 2 AM UTC daily
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write
  checks: write

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate date tag (for nightly builds)
        id: date
        run: echo "tag=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=nightly-${{ steps.date.outputs.tag }},enable=${{ github.event_name == 'schedule' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Spamma.App/Spamma.App/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=${{ steps.date.outputs.tag }}
            VCS_REF=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build test image for extraction
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/Spamma.App/Spamma.App/Dockerfile
          load: true
          target: test
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=${{ steps.date.outputs.tag }}
            VCS_REF=${{ github.sha }}
          tags: spamma:test-extract
          cache-from: type=gha

      - name: Extract test results from Docker
        run: |
          mkdir -p test-results
          docker run --rm -v $(pwd)/test-results:/tmp/out spamma:test-extract \
            sh -c 'if [ -d /test-results ] && [ "$(ls -A /test-results)" ]; then cp /test-results/* /tmp/out/ 2>/dev/null; fi; echo "Test results extraction complete"' || true
        shell: bash

      - name: Check for test results
        run: |
          if [ ! -d test-results ] || [ -z "$(ls -A test-results 2>/dev/null)" ]; then
            echo "WARNING: No test results found in test-results directory"
            mkdir -p test-results
          fi
        shell: bash

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: 'test-results/**/*.trx'
          check_name: Docker Build Test Results
          compare_to_earlier_commit: false
