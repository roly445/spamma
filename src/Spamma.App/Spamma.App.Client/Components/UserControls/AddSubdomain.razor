@if (isVisible && _dataModel != null)
{
    <div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
        <div class="relative top-20 mx-auto p-5 border w-full max-w-2xl shadow-lg rounded-md bg-white">
            <EditForm Model="@model" OnValidSubmit="@HandleAddSubdomain" FormName="AddSubdomainForm">
                <DataAnnotationsValidator />
                
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-lg font-medium text-gray-900">Add New Subdomain</h3>
                    <button type="button" @onclick="Close" 
                           class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>

                <div class="space-y-6">
                    @if (_dataModel.DomainId == null)
                    {
                        <!-- Parent Domain Selection -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                Parent Domain <span class="text-red-500">*</span>
                            </label>
                            <InputSelect @bind-Value="model.DomainId"
                                         class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                         @onchange="OnDomainChanged">
                                <option value="@Guid.Empty">Select a verified domain...</option>
                                @if (_dataModel.AvailableDomains != null)
                                {
                                    @foreach (var domain in _dataModel.AvailableDomains)
                                    {
                                        <option value="@domain.Id">@domain.DomainName</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => model.DomainId)" class="text-red-600 text-sm mt-1"/>
                            <p class="text-xs text-gray-500 mt-1">Only verified domains can have subdomains</p>
                        </div>
                    }
                    <!-- Subdomain Name -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Subdomain Name <span class="text-red-500">*</span>
                        </label>
                        <div class="flex items-center">
                            <InputText @bind-Value="model.Name"
                                       placeholder="mail"
                                       class="flex-1 px-3 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"/>
                            <span class="px-3 py-2 bg-gray-50 border border-l-0 border-gray-300 rounded-r-md text-sm text-gray-500">
                                .@(GetSelectedDomainName() ?? "domain.com")
                            </span>
                        </div>
                        <p class="text-xs text-gray-500 mt-1">Enter the subdomain name (e.g., "mail" for mail.example.com)</p>
                        <ValidationMessage For="@(() => model.Name)" class="text-red-600 text-sm mt-1"/>
                    </div>

                    <!-- Description -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Description
                        </label>
                        <InputTextArea @bind-Value="model.Description"
                                       placeholder="Optional description for this subdomain..."
                                       rows="3"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"/>
                        <ValidationMessage For="@(() => model.Description)" class="text-red-600 text-sm mt-1"/>
                    </div>
                    
                </div>

                <div class="flex items-center justify-end pt-6 border-t border-gray-200 mt-6 space-x-3">
                    <button type="button" 
                           @onclick="Close"
                           class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Cancel
                    </button>
                    <button type="submit" 
                           disabled="@isAddingSubdomain"
                           class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50">
                        @if (isAddingSubdomain)
                        {
                            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            <span>Creating Subdomain...</span>
                        }
                        else
                        {
                            <span>Create Subdomain</span>
                        }
                    </button>
                </div>
            </EditForm>
            
            
        </div>
    </div>
}