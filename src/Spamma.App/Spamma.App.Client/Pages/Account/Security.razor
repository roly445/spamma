@page "/account/security"
@layout AppLayout
@attribute [Authorize]
@using Spamma.App.Client.Components.Passkey
@using Spamma.App.Client.Components
@using Microsoft.AspNetCore.Components.Sections
@using Spamma.App.Client.Layout

<PageTitle>Security Settings - Spamma</PageTitle>

<div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
    <!-- Page Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Security Settings</h1>
        <p class="mt-2 text-gray-600">Manage your account security and authentication methods</p>
    </div>

    <!-- Security Keys / Passkeys Section -->
    <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex items-center">
                <div class="h-10 w-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3">
                    <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                    </svg>
                </div>
                <div>
                    <h2 class="text-xl font-semibold text-gray-900">Security Keys</h2>
                    <p class="text-sm text-gray-600">Manage your passkeys for passwordless authentication</p>
                </div>
            </div>
        </div>

        <div class="px-6 py-6">
    <div class="divide-y divide-gray-200">
        @if (isLoading)
        {
            <div class="px-6 py-8 text-center">
                <div class="inline-block">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                </div>
                <p class="text-gray-600 mt-2">Loading your security keys...</p>
            </div>
        }
        else if (passkeys.Count == 0)
        {
            <div class="px-6 py-8 text-center">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No security keys</h3>
                <p class="mt-1 text-sm text-gray-500">Get started by adding your first security key for passwordless sign-in.</p>
                <div class="mt-6">
                    <button
                        @onclick="RegisterNewPasskey"
                        class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
                        disabled="@isRegistering">
                        @if (isRegistering)
                        {
                            <span class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></span>
                        }
                        Add Security Key
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <button
                        @onclick="RegisterNewPasskey"
                        class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
                        disabled="@isRegistering">
                        @if (isRegistering)
                        {
                            <span class="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-700 mr-2"></span>
                        }
                        else
                        {
                            <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                            </svg>
                        }
                        Add Another Security Key
                    </button>
                    <label class="flex items-center space-x-2 cursor-pointer">
                        <input
                            type="checkbox"
                            @bind="showRevoked"
                            class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 cursor-pointer" />
                        <span class="text-sm text-gray-700">Show revoked keys</span>
                    </label>
                </div>
            </div>

            <ul class="divide-y divide-gray-200">
                @foreach (var passkey in GetFilteredPasskeys())
                {
                    <li class="px-6 py-4 hover:bg-gray-50">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h3 class="text-sm font-medium text-gray-900">@passkey.DisplayName</h3>
                                <p class="mt-1 text-xs text-gray-600">
                                    Added on @passkey.RegisteredAt.ToString("MMM d, yyyy")
                                </p>
                                @if (passkey.LastUsedAt.HasValue)
                                {
                                    <p class="text-xs text-gray-600">
                                        Last used on @passkey.LastUsedAt.Value.ToString("MMM d, yyyy 'at' h:mm tt")
                                    </p>
                                }
                                @if (passkey.IsRevoked)
                                {
                                    <div class="mt-2">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            Revoked
                                        </span>
                                    </div>
                                }
                            </div>
                            @if (!passkey.IsRevoked)
                            {
                                <button
                                    @onclick="() => RevokePasskey(passkey.Id)"
                                    class="ml-4 inline-flex items-center px-3 py-1.5 border border-red-300 shadow-sm text-xs font-medium rounded text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50"
                                    disabled="@isRevoking">
                                    @if (isRevoking && revokingPasskeyId == passkey.Id)
                                    {
                                        <span class="animate-spin rounded-full h-3 w-3 border-b-2 border-red-700 mr-1"></span>
                                    }
                                    Revoke
                                </button>
                            }
                        </div>
                    </li>
                }
            </ul>
        }
    </div>

    <!-- Additional Security Info -->
    <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zm-11-1a1 1 0 11-2 0 1 1 0 012 0z" clip-rule="evenodd"></path>
                </svg>
            </div>
            <div class="ml-3 text-sm text-blue-700">
                <p><strong>What are security keys?</strong> Security keys (passkeys) are a secure way to sign in to your account without needing a password. They work with your device's built-in authenticator or a physical security key.</p>
            </div>
        </div>
    </div>
        </div>
    </div>
</div>

<!-- Security Key Name Modal -->
@if (showNameModal)
{
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity z-50 flex items-center justify-center p-4" @onclick="CloseNameModal">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full" @onclick:stopPropagation="true">
            <!-- Modal Header -->
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-medium text-gray-900">Name Your Security Key</h3>
                    <button @onclick="CloseNameModal" class="text-gray-400 hover:text-gray-500 focus:outline-none focus:text-gray-500">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Body -->
            <div class="px-6 py-4">
                <p class="text-sm text-gray-600 mb-4">Choose a memorable name to identify this security key (e.g., "My YubiKey", "MacBook Pro", "iPhone").</p>
                <input 
                    type="text" 
                    @bind="customPasskeyName"
                    placeholder="e.g., My YubiKey"
                    class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" />
            </div>

            <!-- Modal Footer -->
            <div class="px-6 py-3 border-t border-gray-200 bg-gray-50 flex gap-3 justify-end">
                <button
                    type="button"
                    @onclick="CloseNameModal"
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Cancel
                </button>
                <button
                    type="button"
                    @onclick="ConfirmAndRegisterPasskey"
                    class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Register
                </button>
            </div>
        </div>
    </div>
}