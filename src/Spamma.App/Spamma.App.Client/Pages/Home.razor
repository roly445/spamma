@page "/app"
@layout AppLayout
@attribute [Authorize]
@using Spamma.App.Client.Components.UserControls
@using Spamma.App.Client.Layout

@implements IDisposable

<PageTitle>Spamma - Email Client</PageTitle>

    <!-- Main Content Area -->
    <div class="flex-1 flex overflow-hidden">
        <!-- Left Sidebar - Email List -->
            <!-- Left Sidebar - Email List -->
    <div class="w-96 flex-shrink-0 h-full">
            <div class="flex flex-col h-full bg-white border-r border-gray-200">
    <!-- Header -->
                <div class="flex items-center justify-between p-4 border-b border-gray-200 flex-shrink-0">
                    <h2 class="text-lg font-semibold text-gray-800">Inbox</h2>
                    <div class="flex items-center space-x-2">
                        <button class="p-1 text-gray-400 hover:text-gray-600" @onclick="RefreshEmails" disabled="@_isLoading">
                            @if (_isLoading)
                            {
                                <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-gray-600"></div>
                            }
                            else
                            {
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                            }
                        </button>
                        <button class="p-1 text-gray-400 hover:text-gray-600">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <!-- Search Bar -->
                <div class="p-3 border-b border-gray-200 flex-shrink-0">
                    <div class="relative">
                        <input type="text" 
                               placeholder="Search emails..." 
                               class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                               @bind="_searchText"
                               @bind:event="oninput"
                               @onkeypress="HandleSearchKeyPress">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        @if (!string.IsNullOrWhiteSpace(_searchText))
                        {
                            <button class="absolute inset-y-0 right-0 pr-3 flex items-center"
                                    @onclick="ClearSearch">
                                <svg class="h-5 w-5 text-gray-400 hover:text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        }
                    </div>
                    @if (!string.IsNullOrWhiteSpace(_searchText) || _searchResult != null)
                    {
                        <div class="mt-2 text-xs text-gray-500">
                            @if (_isSearching)
                            {
                                <span>Searching...</span>
                            }
                            else if (_searchResult != null)
                            {
                                <span>@_searchResult.TotalCount result@(_searchResult.TotalCount != 1 ? "s" : "")</span>
                                @if (!string.IsNullOrWhiteSpace(_searchText))
                                {
                                    <span> for "@_searchText"</span>
                                }
                                @if (_searchResult.TotalPages > 1)
                                {
                                    <span> • Page @_searchResult.Page of @_searchResult.TotalPages</span>
                                }
                            }
                        </div>
                    }
                </div>

                <!-- Email List -->
                <div class="flex-1 overflow-y-auto min-h-0">
                    @if (_isSearching)
                    {
                        <div class="flex items-center justify-center p-8">
                            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                        </div>
                    }
                    else if (emails.Count == 0 && !string.IsNullOrWhiteSpace(_searchText))
                    {
                        <div class="flex flex-col items-center justify-center p-8 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">No emails found</h3>
                            <p class="mt-1 text-sm text-gray-500">Try adjusting your search terms.</p>
                        </div>
                    }
                    else if (emails.Count == 0)
                    {
                        <div class="flex flex-col items-center justify-center p-8 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">No emails</h3>
                            <p class="mt-1 text-sm text-gray-500">Your inbox is empty.</p>
                        </div>
                    }
                    else
                    {
                        @foreach (var email in emails)
                        {
                            <div class="@GetEmailItemClasses(email)" @onclick="() => HandleEmailSelected(email)">
                                <div class="flex items-start space-x-3 p-4">
                                    <div class="flex-shrink-0">
                                        <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                                            <span class="text-sm font-medium text-white">@email.PrimaryToAddress.Substring(0, 1).ToUpper()</span>
                                        </div>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <div class="flex items-center justify-between">
                                            <p class="text-sm font-medium text-gray-900 truncate">@email.PrimaryToAddress</p>
                                            <p class="text-xs text-gray-500">@email.ReceivedAt</p>
                                        </div>
                                        <p class="text-sm text-gray-900 font-medium truncate mt-1">@HighlightSearchTerm(email.Subject, _searchText)</p>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

                <!-- Pagination Controls -->
                @if (_searchResult != null && _searchResult.TotalPages > 1)
                {
                    <div class="border-t border-gray-200 px-4 py-3 bg-gray-50 flex-shrink-0">
                        <div class="flex justify-between flex-col">
                            <div class="flex items-center text-sm text-gray-700 mb-2">
                                <span>
                                    Showing @((_searchResult.Page - 1) * _searchResult.PageSize + 1) to 
                                    @Math.Min(_searchResult.Page * _searchResult.PageSize, _searchResult.TotalCount) of 
                                    @_searchResult.TotalCount emails
                                </span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <!-- Previous Button -->
                                <button class="relative inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                                        @onclick="() => GoToPage(_searchResult.Page - 1)"
                                        disabled="@(_searchResult.Page <= 1 || _isLoading)">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                    </svg>
                                    Previous
                                </button>

                                <!-- Page Numbers -->
                                @foreach (var pageNumber in GetVisiblePageNumbers())
                                {
                                    @if (pageNumber == _searchResult.Page)
                                    {
                                        <span class="relative inline-flex items-center px-3 py-1 border border-blue-500 text-sm font-medium rounded-md text-blue-600 bg-blue-50">
                                            @pageNumber
                                        </span>
                                    }
                                    else
                                    {
                                        <button class="relative inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
                                                @onclick="() => GoToPage(pageNumber)"
                                                disabled="@_isLoading">
                                            @pageNumber
                                        </button>
                                    }
                                }

                                <!-- Next Button -->
                                <button class="relative inline-flex items-center px-3 py-1 border border-gray-300 text-sm font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                                        @onclick="() => GoToPage(_searchResult.Page + 1)"
                                        disabled="@(_searchResult.Page >= _searchResult.TotalPages || _isLoading)">
                                    Next
                                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Right Content - Email Viewer -->
        <div class="flex-1">
            <EmailViewer Email="@selectedEmail" OnEmailDeleted="HandleEmailDeleted" />
        </div>
    </div>
