@page "/admin/domains"
@using Microsoft.AspNetCore.Components.Authorization
@using Spamma.App.Client.Components.UserControls
@using Spamma.App.Client.Components.UserControls.Domain
@using Spamma.App.Client.Layout
@using Spamma.Modules.DomainManagement.Client.Contracts
@layout AppLayout
@attribute [Authorize]


<PageTitle>Domain Management - Spamma Admin</PageTitle>

<div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <AdminHeader Title="Domain Management" Subtitle="Manage domains, subdomains, and user assignments">
        <Controls>
            <AuthorizeView Policy="DomainAdministration">
                <Authorized>
                    <button @onclick="OpenAddDomainModal" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <svg class="w-4 h-4 mr-2" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Add Domain
                    </button>
                </Authorized>
            </AuthorizeView>
           
        </Controls>
    </AdminHeader>
    
    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Filters and Search -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
            <EditForm Model="@searchRequest" OnSubmit="@HandleSearch" FormName="DomainSearchForm">
                <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
                        <InputText @bind-Value="searchRequest.SearchTerm" 
                                  placeholder="Search by domain or contact..." 
                                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                        <InputSelect @bind-Value="searchRequest.Status" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="">All Statuses</option>
                            <option value="@DomainStatus.Active">Active</option>
                            <option value="@DomainStatus.Pending">Pending</option>
                            <option value="@DomainStatus.Suspended">Suspended</option>
                        </InputSelect>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Verification</label>
                        <InputSelect @bind-Value="searchRequest.IsVerified" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="@VerificationStatus.All">All</option>
                            <option value="@VerificationStatus.Verified">Verified</option>
                            <option value="@VerificationStatus.Unverified">Unverified</option>
                        </InputSelect>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Sort By</label>
                        <InputSelect @bind-Value="searchRequest.SortBy" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="CreatedAt">Created Date</option>
                            <option value="DomainName">Domain Name</option>
                            <option value="Status">Status</option>
                            <option value="VerifiedAt">Verified Date</option>
                            <option value="SubdomainCount">Subdomains</option>
                        </InputSelect>
                    </div>
                    <div class="flex items-end">
                        <button type="submit" 
                               class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                            Search
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-5 gap-6 mb-6">
            <StatCard Title="Total Domains" Value="@((_pagedResult?.TotalCount ?? 0).ToString())">
                <svg class="w-5 h-5 text-blue-600 fill-none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
                </svg>
            </StatCard>
            <StatCard Title="Active" Value="@((_pagedResult?.Items.Count(d => d.Status == DomainStatus.Active) ?? 0).ToString())">
                <svg class="w-5 h-5 text-green-600" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
            </StatCard>
            <StatCard Title="Verified" Value="@((_pagedResult?.Items.Count(d => d.IsVerified) ?? 0).ToString())">
                <svg class="w-5 h-5 text-blue-600" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                </svg>
            </StatCard>
            <StatCard Title="Pending" Value="0">
                <svg class="w-5 h-5 text-yellow-600" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.966-.833-2.736 0L3.077 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
            </StatCard>
            <StatCard Title="Suspended" Value="@((_pagedResult?.Items.Count(d => d.Status == DomainStatus.Suspended) ?? 0).ToString())" IconClass="bg-red-100">
                <svg class="w-5 h-5 text-red-600" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18 21l-2.636-2.636M5.636 5.636L3 3l2.636 2.636"></path>
                </svg>
            </StatCard>
        </div>

        <!-- Domains Table -->
        <div class="bg-white shadow-sm rounded-lg border border-gray-200 overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Domains</h3>
            </div>
            
            @if (isLoading)
            {
                <div class="flex items-center justify-center py-12">
                    <svg class="animate-spin h-8 w-8 text-blue-600" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </div>
            }
            else if (_pagedResult?.Items.Any() == true)
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Domain</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Verification</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Subdomains</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Users</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var domain in _pagedResult.Items)
                            {
                                <tr class="hover:bg-gray-50">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <DomainIcon DomainName="@domain.DomainName" />
                                            <div class="ml-4">
                                                <div class="text-sm font-medium text-gray-900">@domain.DomainName</div>
                                                <div class="text-sm text-gray-500">@(domain.PrimaryContact ?? "No contact")</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="@GetStatusClasses(domain.Status)">
                                            @GetStatusText(domain.Status)
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            @if (domain.IsVerified)
                                            {
                                                <svg class="h-5 w-5 text-green-500 mr-1" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                                                </svg>
                                                <span class="text-sm text-green-700 font-medium">Verified</span>
                                            }
                                            else
                                            {
                                                <svg class="h-5 w-5 text-red-500 mr-1" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.966-.833-2.736 0L3.077 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                                </svg>
                                                <span class="text-sm text-red-700 font-medium">Unverified</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <div class="flex items-center">
                                            <span class="font-medium">@domain.SubdomainCount</span>
                                            @if (domain.SubdomainCount > 0)
                                            {
                                                <span class="ml-1 text-gray-500">subdomains</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                        <div class="flex items-center">
                                            <span class="font-medium">@domain.AssignedUserCount</span>
                                            <span class="ml-1 text-gray-500">users</span>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @domain.CreatedAt.ToString("MMM dd, yyyy")
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <div class="flex items-center justify-end space-x-2">
                                            <button @onclick="() => NavigateToDomainDetails(domain.Id)" class="text-blue-600 hover:text-blue-900">View</button>

                                            <button @onclick="() => OpenEditDomain(domain)" class="text-indigo-600 hover:text-indigo-900">Edit</button>
                                            @if (!domain.IsVerified)
                                            {
                                                <button @onclick="() => OpenVerifyDomain(domain)" class="text-green-600 hover:text-green-900">Verify</button>
                                            }
                                            @if (domain.Status != DomainStatus.Suspended)
                                            {
                                                <button @onclick="() => OpenSuspendDomain(domain)"
                                                        class="text-red-600 hover:text-red-900">
                                                    Suspend
                                                </button>
                                            }
                                            else
                                            {
                                                <button @onclick="() => OpenUnsuspendDomain(domain)"
                                                        class="text-green-600 hover:text-green-900">
                                                    Unsuspend
                                                </button>
                                            }

                                        </div>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination (same as user management) -->
                @if (_pagedResult.TotalPages > 1)
                {
                    <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
                        <div class="flex-1 flex justify-between sm:hidden">
                            <button @onclick="() => GoToPage(_pagedResult.Page - 1)" 
                                   disabled="@(_pagedResult.Page <= 1)"
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                Previous
                            </button>
                            <button @onclick="() => GoToPage(_pagedResult.Page + 1)" 
                                   disabled="@(_pagedResult.Page >= _pagedResult.TotalPages)"
                                   class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                Next
                            </button>
                        </div>
                        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                            <div>
                                <p class="text-sm text-gray-700">
                                    Showing <span class="font-medium">@((_pagedResult.Page - 1) * _pagedResult.PageSize + 1)</span>
                                    to <span class="font-medium">@Math.Min(_pagedResult.Page * _pagedResult.PageSize, _pagedResult.TotalCount)</span>
                                    of <span class="font-medium">@_pagedResult.TotalCount</span> results
                                </p>
                            </div>
                            <div>
                                <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                    <button @onclick="() => GoToPage(_pagedResult.Page - 1)" 
                                           disabled="@(_pagedResult.Page <= 1)"
                                           class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                        <svg class="h-5 w-5" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                    
                                    @for (int i = Math.Max(1, _pagedResult.Page - 2); i <= Math.Min(_pagedResult.TotalPages, _pagedResult.Page + 2); i++)
                                    {
                                        int pageCount = i;
                                        <button @onclick="() => GoToPage(pageCount)" 
                                               class="@(pageCount == _pagedResult.Page 
                                                   ? "bg-blue-50 border-blue-500 text-blue-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium"
                                                   : "bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium")">
                                            @pageCount
                                        </button>
                                    }
                                    
                                    <button @onclick="() => GoToPage(_pagedResult.Page + 1)" 
                                           disabled="@(_pagedResult.Page >= _pagedResult.TotalPages)"
                                           class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                        <svg class="h-5 w-5" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </nav>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-12">
                    <svg class="mx-auto h-12 w-12 text-gray-400 fill-none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9 3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-gray-900">No domains found</h3>
                    <p class="mt-1 text-sm text-gray-500">Try adjusting your search filters.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Domain Modal -->
@if (showAddDomainModal)
{
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity z-50 flex items-center justify-center p-4" @onclick="CloseAddDomainModal">
        <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-screen overflow-y-auto" @onclick:stopPropagation="true">
            <!-- Modal Header -->
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-medium text-gray-900">Add New Domain</h3>
                    <button @onclick="CloseAddDomainModal" class="text-gray-400 hover:text-gray-500 focus:outline-none focus:text-gray-500">
                        <svg class="h-6 w-6" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Body -->
            <div class="px-6 py-4">
                @if (addDomainStep == AddDomainStep.DomainDetails)
                {
                    <!-- Step 1: Domain Details -->
                    <EditForm Model="@addDomainModel" OnValidSubmit="@HandleAddDomain" FormName="AddDomainForm">
                        <DataAnnotationsValidator />

                        <div class="space-y-6">
                            <!-- Progress Indicator -->
                            <div class="flex items-center justify-center mb-6">
                                <div class="flex items-center">
                                    <div class="flex items-center justify-center w-8 h-8 bg-blue-600 text-white rounded-full text-sm font-medium">
                                        1
                                    </div>
                                    <div class="w-16 h-1 bg-gray-300 mx-2"></div>
                                    <div class="flex items-center justify-center w-8 h-8 bg-gray-300 text-gray-600 rounded-full text-sm font-medium">
                                        2
                                    </div>
                                    <span class="ml-3 text-sm text-gray-600">Domain Details</span>
                                </div>
                            </div>

                            <!-- Domain Name -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">
                                    Domain Name <span class="text-red-500">*</span>
                                </label>
                                <InputText @bind-Value="addDomainModel.DomainName" 
                                          placeholder="example.com"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm" />
                                <ValidationMessage For="@(() => addDomainModel.DomainName)" class="mt-1 text-sm text-red-600" />
                                <p class="mt-1 text-sm text-gray-500">Enter the domain name without protocol (e.g., example.com)</p>
                            </div>

                            <!-- Primary Contact -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Primary Contact Email</label>
                                <InputText @bind-Value="addDomainModel.PrimaryContact" 
                                          placeholder="admin@example.com"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm" />
                                <ValidationMessage For="@(() => addDomainModel.PrimaryContact)" class="mt-1 text-sm text-red-600" />
                                <p class="mt-1 text-sm text-gray-500">Contact email for domain-related notifications</p>
                            </div>

                            <!-- Description -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                                <InputTextArea @bind-Value="addDomainModel.Description" 
                                              rows="3" 
                                              placeholder="Optional: Describe the purpose of this domain..."
                                              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm" />
                            </div>

                            <!-- Important Info -->
                            <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
                                <div class="flex">
                                    <div class="flex-shrink-0">
                                        <svg class="h-5 w-5 text-blue-400" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                    <div class="ml-3">
                                        <h3 class="text-sm font-medium text-blue-800">Domain Verification Required</h3>
                                        <div class="mt-2 text-sm text-blue-700">
                                            <p>After adding this domain, you'll need to verify ownership by adding a DNS TXT record. Subdomains can only be added to verified domains.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="mt-6 flex justify-end space-x-3">
                            <button type="button" @onclick="CloseAddDomainModal" 
                                   class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                Cancel
                            </button>
                            <button type="submit" 
                                   disabled="@isAddingDomain"
                                   class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                @if (isAddingDomain)
                                {
                                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    <span>Adding Domain...</span>
                                }
                                else
                                {
                                    <span>Add Domain & Get Verification Instructions</span>
                                }
                            </button>
                        </div>
                    </EditForm>
                }
                else if (addDomainStep == AddDomainStep.VerificationInstructions)
                {
                    <!-- Step 2: Verification Instructions -->
                    <div class="space-y-6">
                        <!-- Progress Indicator -->
                        <div class="flex items-center justify-center mb-6">
                            <div class="flex items-center">
                                <div class="flex items-center justify-center w-8 h-8 bg-green-600 text-white rounded-full text-sm font-medium">
                                    <svg class="w-4 h-4" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                </div>
                                <div class="w-16 h-1 bg-blue-600 mx-2"></div>
                                <div class="flex items-center justify-center w-8 h-8 bg-blue-600 text-white rounded-full text-sm font-medium">
                                    2
                                </div>
                                <span class="ml-3 text-sm text-gray-600">Verification Instructions</span>
                            </div>
                        </div>

                        <!-- Success Message -->
                        <div class="text-center mb-6">
                            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4">
                                <svg class="h-6 w-6 text-green-600" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                            </div>
                            <h3 class="text-lg font-medium text-gray-900">Domain Added Successfully!</h3>
                            <p class="mt-2 text-sm text-gray-600">
                                <strong>@addDomainModel.DomainName</strong> has been added to your account.
                            </p>
                        </div>

                        <!-- Verification Instructions -->
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <svg class="h-5 w-5 text-yellow-400" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.966-.833-2.736 0L3.077 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                    </svg>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-yellow-800">Verification Required</h3>
                                    <div class="mt-2 text-sm text-yellow-700">
                                        <p>To verify ownership and enable subdomain creation, add this TXT record to your DNS:</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- DNS Record Instructions -->
                        <div class="space-y-4">
                            <h4 class="text-sm font-medium text-gray-900">DNS TXT Record Details</h4>
                            
                            <div class="bg-gray-50 rounded-lg p-4 space-y-3">
                                <div class="grid grid-cols-3 gap-4">
                                    <div>
                                        <label class="block text-xs font-medium text-gray-500 uppercase tracking-wide">Type</label>
                                        <div class="mt-1 flex items-center">
                                            <code class="px-2 py-1 text-sm bg-white border rounded">TXT</code>
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-xs font-medium text-gray-500 uppercase tracking-wide">Name</label>
                                        <div class="mt-1 flex items-center">
                                            <code class="px-2 py-1 text-sm bg-white border rounded">@@</code>
                                            <button @onclick="() => CopyToClipboard()" class="ml-2 p-1 text-gray-400 hover:text-gray-600">
                                                <svg class="w-4 h-4" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-xs font-medium text-gray-500 uppercase tracking-wide">TTL</label>
                                        <div class="mt-1">
                                            <code class="px-2 py-1 text-sm bg-white border rounded">3600</code>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <label class="block text-xs font-medium text-gray-500 uppercase tracking-wide mb-2">Value</label>
                                    <div class="flex items-center">
                                        <code class="flex-1 px-3 py-2 text-sm bg-white border rounded break-all">@verificationToken</code>
                                        <button @onclick="() => CopyToClipboard(verificationToken)" class="ml-2 p-2 text-gray-400 hover:text-gray-600 border rounded">
                                            <svg class="w-4 h-4" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step-by-Step Instructions -->
                        <div class="space-y-4">
                            <h4 class="text-sm font-medium text-gray-900">Step-by-Step Instructions</h4>
                            <ol class="list-decimal list-inside space-y-2 text-sm text-gray-700">
                                <li>Log in to your DNS provider's control panel (where you manage DNS for @addDomainModel.DomainName)</li>
                                <li>Navigate to the DNS management section</li>
                                <li>Add a new TXT record with the details shown above</li>
                                <li>Save the changes and allow up to 24 hours for propagation</li>
                                <li>Return to Spamma and click "Check Verification" to verify your domain</li>
                            </ol>
                        </div>

                        <!-- Common DNS Providers -->
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                            <h4 class="text-sm font-medium text-blue-900 mb-3">Quick Links for Popular DNS Providers</h4>
                            <div class="grid grid-cols-2 gap-2 text-sm">
                                <a href="https://support.google.com/domains/answer/3290350" target="_blank" class="text-blue-700 hover:text-blue-800 underline">Google Domains</a>
                                <a href="https://help.godaddy.com/help/680" target="_blank" class="text-blue-700 hover:text-blue-800 underline">GoDaddy</a>
                                <a href="https://support.cloudflare.com/hc/en-us/articles/360019093151" target="_blank" class="text-blue-700 hover:text-blue-800 underline">Cloudflare</a>
                                <a href="https://docs.aws.amazon.com/route53/latest/dg/resource-record-sets-creating.html" target="_blank" class="text-blue-700 hover:text-blue-800 underline">AWS Route 53</a>
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex justify-end space-x-3">
                            <button type="button" @onclick="CloseAddDomainModal" 
                                   class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                I'll Verify Later
                            </button>
                            <button type="button" @onclick="CheckVerification"
                                   disabled="@isCheckingVerification"
                                   class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                @if (isCheckingVerification)
                                {
                                    <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    <span>Checking...</span>
                                }
                                else
                                {
                                    <span>Check Verification</span>
                                }
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<!-- Edit Domain Slide-out Panel -->
<EditDomain @ref="_editDomain" OnSaved="HandleEditSaved" />

<VerifyDomain @ref="_verifyDomain" OnVerified="HandleVerified"></VerifyDomain>

<SuspendDomain @ref="_suspendDomain" OnSuspended="HandleDomainSuspended" />

<UnsuspendDomain @ref="_unsuspendDomain" OnUnsuspended="HandleDomainUnsuspended" />
<!-- Unsuspend Domain Modal -->

